<?xml version="1.0" encoding="UTF-8"?>
<project name="build-reports" basedir=".">
  <description>
    Creates all reports.

    This file is always copied to tmp/argouml/src/argouml-build directory 
    before invoked.

    Output of all scripts here is the ${result.dir}/reports directory.
  </description>

  <import file="build.xml"/>

  <property name="argo.root.dir" value="${basedir}/../.." />
  <property file="default.properties"/>
  <property file="reporting.properties"/>
  
  <!--
    reports are deposited in this directory.
  -->
  <property name="build.reports.dir" location="${result.dir}/reports"/>


  <!-- ###################################################################
       # coverage reports
  -->
  <property name="build.coverage.dir"
            location="${build.reports.dir}/coverage"/>
  <!-- <property name="build.coverage.xml.dir"
                 location="${build.reports.dir}/coverage-xml"/>
    -->
  
  <!-- TODO: Is this property needed? -->
  <property name="instrument-ant.xsl"
            location="${xsl.dir}/instrument-ant.xsl"/>

  <target name="instrument" description="Add coverage instrumentation">
    <mkdir dir="${build.coverage.dir}"/>
    <!-- <mkdir dir="${build.coverage.xml.dir}"/> -->

    <property name="b1" location="../argouml-app/build"/>
    <property name="b2" location="../argouml-core-diagrams-sequence2/build"/>
    <property name="b3" location="../argouml-core-model/build"/>
    <property name="b4" location="../argouml-core-model-euml/build"/>
    <property name="b5" location="../argouml-core-model-mdr/build"/>

    <!-- b2 and b4 are not included. -->

    <delete failonerror="false">
      <fileset dir="${b1}/instrumented-classes"/>
      <fileset dir="${b3}/instrumented-classes"/>
      <fileset dir="${b5}/instrumented-classes"/>
    </delete>

    <mkdir dir="${b1}/instrumented-classes"/>
    <mkdir dir="${b3}/instrumented-classes"/>
    <mkdir dir="${b5}/instrumented-classes"/>

    <!-- Now copy all none class stuff. -->
    <copy todir="${b1}/instrumented-classes">
      <fileset dir="${b1}/classes">
        <exclude name="**/*.class"/>
      </fileset>
    </copy>

    <copy todir="${b3}/instrumented-classes">
      <fileset dir="${b3}/classes">
        <exclude name="**/*.class"/>
      </fileset>
    </copy>

    <copy todir="${b5}/instrumented-classes">
      <fileset dir="${b5}/classes">
        <exclude name="**/*.class"/>
      </fileset>
    </copy>


    <delete file="cobertura.ser"/>

    <cobertura-instrument todir="${b1}/instrumented-classes">
      <ignore regex="org.apache.log4j.*"/>
      <fileset dir="${b1}/classes">
        <include name="**/*.class"/>
      </fileset>
    </cobertura-instrument>
    <move file="cobertura.ser" toFile="cobertura.ser.1"/>

    <cobertura-instrument todir="${b3}/instrumented-classes">
      <ignore regex="org.apache.log4j.*"/>
      <fileset dir="${b3}/classes">
        <include name="**/*.class"/>
      </fileset>
    </cobertura-instrument>
    <move file="cobertura.ser" toFile="cobertura.ser.3"/>

    <cobertura-instrument todir="${b5}/instrumented-classes">
      <ignore regex="org.apache.log4j.*"/>
      <fileset dir="${b5}/classes">
        <include name="**/*.class"/>
      </fileset>
    </cobertura-instrument>
    <move file="cobertura.ser" toFile="cobertura.ser.5"/>


    <cobertura-merge>
      <fileset dir=".">
        <include name="cobertura.ser.1"/>
        <include name="cobertura.ser.3"/>
        <include name="cobertura.ser.5"/>
      </fileset>
    </cobertura-merge>

    <delete file="cobertura.ser.1"/>
    <delete file="cobertura.ser.3"/>
    <delete file="cobertura.ser.5"/>

  </target>

  <target name="compile-tests">
    <ant dir="../argouml-app" inheritAll="false" target="compile-tests"/>
  </target>

  <target name="coverage-test" depends="compile-tests"
          description="Unit test the application">

    <delete dir="build/tests/reports"/>
    <mkdir dir="build/tests/reports"/>

    <junit errorproperty="junit.failure" failureproperty="junit.failure"
           fork="yes" dir="${basedir}" forkmode="perTest"
           haltonfailure="false"
           maxmemory="48M" printsummary="true"
	   >
      <sysproperty key="test.model.uml13" value="${011202.xml}"/>
      <sysproperty key="test.model.uml" 
            value="../argouml-core-model-mdr/src/org/argouml/model/mdr/mof/01-02-15.xml"/>
      <sysproperty key="argouml.model.implementation" 
            value="${test.model.implementation}"/>
      <sysproperty key="log4j.configuration" value="org/argouml/resource/default.lcf"/>
      <sysproperty key="java.awt.headless" value="true"/>
      <sysproperty key="argouml.tests.dir" value="../argouml-app/tests"/>
      <sysproperty key="net.sourceforge.cobertura.datafile"
                   file="cobertura.ser" />
      <assertions>
        <enable/>
      </assertions>

      <classpath>
        <path refid="coverage"/>
        <pathelement location="../argouml-app/build/instrumented-classes"/>
        <pathelement location="../argouml-core-model/build/instrumented-classes"/>
        <pathelement location="../argouml-core-model-mdr/build/instrumented-classes"/>
        <fileset dir="build">
          <include name="*.jar"/>
        </fileset>
        <pathelement location="../argouml-app/build/tests/classes"/>
      </classpath>
      <formatter type="xml"/>
      <batchtest todir="build/tests/reports">
        <fileset dir="../argouml-app/tests">
          <include name="org/argouml/**/Test*.java"/>
          <exclude name="org/argouml/TestDependencies.java"/>
        </fileset>
      </batchtest>
    </junit>

    <mkdir dir="${build.coverage.dir}/junit"/>
    <junitreport todir="${build.coverage.dir}/junit">
      <fileset dir="build/tests/reports">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="build/tests/reports/html"/>
    </junitreport>

  </target>


  <target name="report:coverage"
          depends="init-reports,instrument,coverage-test">
    <description>instrument and unit test</description>

    <delete dir="${build.coverage.dir}"/>
    <mkdir dir="${build.coverage.dir}"/>

    <cobertura-report destdir="${build.coverage.dir}/coverage">
      <fileset dir="../argouml-app/src"/>
      <fileset dir="../argouml-core-model/src"/>
      <fileset dir="../argouml-core-model-mdr/src"/>
    </cobertura-report>

    <exec executable="sed" input="argouml.log" output="${build.coverage.dir}/argouml.log">
      <arg value="s/^20[0-9][0-9]-[01][0-9]-[0-3][0-9] [0-2][0-9]:[0-5][0-9]:[0-5][0-9],[0-9][0-9][0-9] //"/>
    </exec>
    <delete file="argouml.log"/>

    <mkdir dir="${build.coverage.dir}/junit"/>
    <move todir="${build.coverage.dir}/junit">
      <fileset dir="${tests.reports}/html"/>
    </move>

    <echo file="${build.coverage.dir}/index.html">
&lt;a href="coverage/index.html"&gt;Coverage result&lt;/a&gt; &lt;br&gt;
&lt;a href="junit/index.html"&gt;JUnit tests result&lt;/a&gt;
    </echo>

    <echo>
coverage reports have been generated.
The report is ${build.coverage.dir}/index.html
    </echo>
  </target>


  <path id="coverage">
    <fileset dir="${cobertura.dir}">
      <include name="cobertura.jar"/>
      <include name="lib/**/*.jar"/>
    </fileset>
  </path>

  <taskdef classpathref="coverage" resource="tasks.properties"/>


  <!-- ################################################################### 
       # jdepend reports
  -->
  <property name="build.jdepend.dir" location="${build.reports.dir}/jdepend"/>
  <property name="build.jdepend.xml.dir"
            location="${build.reports.dir}/jdepend-xml"/>
  
  <taskdef classname="org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask" name="jdepend">
    <classpath>
      <pathelement location="${jdepend.jar.path}"/>
      <fileset dir="${ant.home}">
        <include name="**/*.jar"/>
      </fileset>
    </classpath>
  </taskdef>
  

  <target name="report:jdepend" depends="package"
          description="create jdepend reports">
    <delete dir="${build.jdepend.dir}"/>
    <delete dir="${build.jdepend.xml.dir}"/>
    <mkdir dir="${build.jdepend.dir}"/>
    <mkdir dir="${build.jdepend.xml.dir}"/>

    <jdepend outputfile="${build.jdepend.xml.dir}/jdepend.xml"
             fork="yes" format="xml">
      <classpath>
        <pathelement location="${jdepend.jar.path}"/>
      </classpath>
      <exclude name="antlr.*"/>
      <exclude name="java.*"/>
      <exclude name="javax.*"/>
      <exclude name="org.apache.log4j.*"/>
      <classespath>
        <dirset dir=".">
          <include name="**/build/classes/**"/>
        </dirset>
      </classespath>
    </jdepend>

    <style basedir="${build.jdepend.xml.dir}" destdir="${build.jdepend.dir}"
           style="${ant.home}/etc/jdepend-frames.xsl">
      <param name="output.dir" expression="${build.jdepend.dir}"/>
    </style>

  </target>

  <!-- ################################################################### 
       # checkstyle reports
  -->
  <property name="report.checkstyle.dir"
            location="${build.reports.dir}/checkstyle"/>

  <target name="report:checkstyle"
          description="create checkstyle reports">
    <ant dir="../argouml-app" inheritAll="false" target="cleanparser"/>

    <ant target="argouml-gen.checkstyle"
         antfile="build-reports.xml"
         output="checkstyle-result.txt" inheritall="false"/>
    <delete dir="${report.checkstyle.dir}"/>
    <mkdir dir="${report.checkstyle.dir}"/>
    <exec executable="sed"
          input="checkstyle-result.txt"
          output="${report.checkstyle.dir}/index.html">
      <arg value="--expression=1i&lt;pre&gt;"/>
      <arg value="--expression=$i&lt;/pre&gt;"/>
      <arg value="--expression=s; [^ ]*/\.\./\.\./\([^/]*\)\(/[^:][^:]*\):\([0-9][0-9]*\)\(:[^ ]*\); &lt;a href='http://\1.tigris.org/source/browse/\1/trunk\2?annotate=HEAD#id\3'&gt;\1/trunk\2:\3\4&lt;/a&gt;;"/>
      <arg value="--expression=s; [^ ]*/\.\.\(/[^:][^:]*\):\([0-9][0-9]*\)\(:[^ ]*\); &lt;a href='http://argouml.tigris.org/source/browse/argouml/trunk\1?annotate=HEAD#id\2'&gt;argouml/trunk\1:\2\3&lt;/a&gt;;"/>
    </exec>
    <delete file="checkstyle-result.txt"/>
  </target>
  

  <!-- =================================================================== -->
  <!-- Runs checkstyle to find style problems in ArgoUML.                  -->
  <!-- =================================================================== -->
  <target name="do-checkstyle" depends="init">
    <echo>
Running checkstyle on ${source.dir}.
</echo>
    <java classname="com.puppycrawl.tools.checkstyle.Main" failonerror="false" fork="true" maxmemory="32M">
      <sysproperty key="checkstyle.header.file" value="${argo.tools.dir}/checkstyle/java.header"/>
      <classpath>
	<pathelement location="${argouml-gen.checkstyle.jar.path}"/>
      </classpath>
      <arg value="-c"/>
      <arg value="${argo.tools.dir}/checkstyle/checkstyle_argouml.xml"/>
      <arg value="-r"/>
      <arg value="${source.dir}"/>
    </java>
  </target>

  <target name="argouml-gen.checkstyle" depends="init"
          description="Run checkstyle on all source.">
    <antcall target="do-checkstyle">
      <param name="source.dir" value="../argouml-core-model/src"/>
    </antcall>
    <antcall target="do-checkstyle">
      <param name="source.dir" value="../argouml-core-model-mdr/src"/>
    </antcall>
    <antcall target="do-checkstyle">
      <param name="source.dir" value="../argouml-core-model-euml/src"/>
    </antcall>
    <antcall target="do-checkstyle">
      <param name="source.dir" value="../argouml-app/src"/>
    </antcall>
    <antcall target="do-checkstyle">
      <param name="source.dir" value="../argouml-core-diagrams-sequence2/src"/>
    </antcall>

    <antcall target="do-checkstyle">
      <param name="source.dir" value="../argouml-core-model/tests"/>
    </antcall>
    <antcall target="do-checkstyle">
      <param name="source.dir" value="../argouml-core-model-mdr/tests"/>
    </antcall>
    <antcall target="do-checkstyle">
      <param name="source.dir" value="../argouml-core-model-euml/tests"/>
    </antcall>
    <antcall target="do-checkstyle">
      <param name="source.dir" value="../argouml-core-diagrams-sequence2/tests"/>
    </antcall>
    <antcall target="do-checkstyle">
      <param name="source.dir" value="../argouml-app/tests"/>
    </antcall>

    <antcall target="do-checkstyle">
      <param name="source.dir"
             value="${argo.root.dir}/../argouml-andromda/src"/>
    </antcall>
    <antcall target="do-checkstyle">
      <param name="source.dir"
             value="${argo.root.dir}/../argouml-classfile/src"/>
    </antcall>
    <antcall target="do-checkstyle">
      <param name="source.dir" value="${argo.root.dir}/../argouml-cpp/src"/>
    </antcall>
    <antcall target="do-checkstyle">
      <param name="source.dir" value="${argo.root.dir}/../argouml-csharp/src"/>
    </antcall>
    <antcall target="do-checkstyle">
      <param name="source.dir" value="${argo.root.dir}/../argouml-idl/src"/>
    </antcall>
    <antcall target="do-checkstyle">
      <param name="source.dir" value="${argo.root.dir}/../argouml-php/src"/>
    </antcall>
    <antcall target="do-checkstyle">
      <param name="source.dir" value="${argo.root.dir}/../argouml-python/src"/>
    </antcall>
  </target>


  <!-- ################################################################### 
       # junit reports
  -->
  <property name="report.junit.dir" location="${build.reports.dir}/junit"/>
  
  <target name="report:junit" depends="init-reports,tests"
          description="create junit reports">
    <antcall target="junit-report-mail"/>

    <delete dir="${report.junit.dir}"/>
    <mkdir dir="${report.junit.dir}"/>

    <!-- Junitreport has already run - put the reports in the right spot. -->
    <copy todir="${report.junit.dir}">
      <fileset dir="${tests.reports}/html"/>
    </copy>
  </target>
  

  <!-- ################################################################### 
       # javadoc reports
  -->
  <property name="report.javadocs.dir"
            location="${build.reports.dir}/javadocs"/>
  <property name="report.javadocs-api.dir"
            location="${build.reports.dir}/javadocs-api"/>

  <target name="report:javadocs"
          description="create javadocs reports">
    <antcall target="prepare-docs" inheritall="false"/>

    <!-- put the reports in the right spot. -->
    <delete dir="${report.javadocs.dir}"/>
    <mkdir dir="${report.javadocs.dir}"/>
    <copy todir="${report.javadocs.dir}">
      <filterchain>
        <filterreader classname="org.apache.tools.ant.filters.StripLineComments">
	  <param type="comment" value="&lt;!-- Generated by javadoc"/>
        </filterreader>
	<tokenfilter>
	  <replaceregex pattern="(&lt;META NAME=.date. CONTENT=.)20[0-9][0-9]-[0-1][0-9]-[0-3][0-9](.&gt;)"
	                 replace="\1$Date$\2"
			 flags="g"/>
	</tokenfilter>
      </filterchain>
      <fileset dir="${argo.javadocs.dir}"/>
    </copy>

    <delete dir="${report.javadocs-api.dir}"/>
    <mkdir dir="${report.javadocs-api.dir}"/>
    <copy todir="${report.javadocs-api.dir}">
      <filterchain>
        <filterreader classname="org.apache.tools.ant.filters.StripLineComments">
	  <param type="comment" value="&lt;!-- Generated by javadoc"/>
        </filterreader>
	<tokenfilter>
	  <replaceregex pattern="(&lt;META NAME=.date. CONTENT=.)20[0-9][0-9]-[0-1][0-9]-[0-3][0-9](.&gt;)"
	                 replace="\1$Date$\2"
			 flags="g"/>
	</tokenfilter>
      </filterchain>
      <fileset dir="${argo.api.dir}"/>
    </copy>

  </target>
  
  <!-- ###################################################################
    General targets.
  -->

  <target name="clean-reports" description="clean up build artefacts">
    <echo>${build.reports.dir}</echo>
    <delete quiet="true" includeEmptyDirs="true">
      <fileset dir="${build.reports.dir}"/>
      <fileset dir="${argo-gen.coverage.instrumented.classes}"/>
      <fileset dir="${argo.root.dir}">
        <include name="jcoverage.ser"/>
        <include name="jcoverage.log"/>
      </fileset>
    </delete>
  </target>

  <target name="init-reports" depends="init"
          description="create build directories">
    <ant target="package" inheritall="false"/>
  </target>

  <path id="argo.runtime.classpath">
    <!-- Currently same as the compile path. -->
    <path refid="argo.compile.classpath"/>
  </path>
  
 

  <!-- \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ -->
  <!-- Applying FindBugs                                                -->
  <!-- //////////////////////////////////////////////////////////////// -->

  <property name="report.findbugs.dir"
            location="${build.reports.dir}/findbugs"/>
  <property name="report.findbugs.xml.dir"
            location="${build.reports.dir}/findbugs-xml"/>
  <property name="findbugs.html"
            location="${report.findbugs.dir}/findbugs_report.html"/>
  <property name="findbugs.txt"
            location="${report.findbugs.dir}/findbugs_report.txt"/>
  
  <path id="findbugs.path">
    <fileset dir="${findbugs.dir}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <taskdef name="findbugs" classpathref="findbugs.path"
           classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>

  <target name="report:findbugs"
          description="create FindBugs reports">
    <ant target="package" inheritall="false"/>

    <mkdir dir="${report.findbugs.xml.dir}"/>

    <!-- Prepare for result processing. -->
    <unzip src="${findbugs.dir}/plugin/coreplugin.jar"
       dest="${working.dir}">
        <patternset>
            <include name="**/messages.xml"/>
        </patternset>
    </unzip>
    <mkdir dir="${report.findbugs.dir}"/>


    <findbugs home="${findbugs.dir}" output="xml"
              outputFile="${report.findbugs.xml.dir}/out-argouml-model.xml"
              conserveSpace="true" timeout="18000000"
              jvmargs="-Xms64M -Xmx256M -verbosegc">
      <class location="../argouml-core-model/build/argouml-model.jar" />
      <sourcePath path="../argouml-core-model/src"/>
      <classpath>
        <path refid="findbugs.path"/>
      </classpath>
    </findbugs>

    <style basedir="${report.findbugs.xml.dir}"
           includes="out-argouml-model.xml"
           destdir="${report.findbugs.dir}/argouml-model"
           style="${xsl.dir}/findbugs-frames.xsl">
      <param name="output.dir" expression="${report.findbugs.dir}/argouml-model"/>
      <param name="messages.xml" expression="${working.dir}/messages.xml"/>
    </style>


    <findbugs home="${findbugs.dir}" output="xml"
              outputFile="${report.findbugs.xml.dir}/out-argouml-mdr.xml"
              conserveSpace="true" timeout="18000000"
              jvmargs="-Xms64M -Xmx256M -verbosegc">
      <class location="../argouml-core-model-mdr/build/argouml-mdr.jar" />
      <auxClasspath>
        <fileset dir="../argouml-core-model/build">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="../argouml-core-infra/build">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="../argouml-core-model-mdr/build">
          <include name="*.jar"/>
        </fileset>
      </auxClasspath>
      <sourcePath path="../argouml-core-model-mdr/src"/>
      <classpath>
        <path refid="findbugs.path"/>
      </classpath>
    </findbugs>

    <style basedir="${report.findbugs.xml.dir}"
           includes="out-argouml-mdr.xml"
           destdir="${report.findbugs.dir}/argouml-mdr"
           style="${xsl.dir}/findbugs-frames.xsl">
      <param name="output.dir" expression="${report.findbugs.dir}/argouml-mdr"/>
      <param name="messages.xml" expression="${working.dir}/messages.xml"/>
    </style>

    <findbugs home="${findbugs.dir}" output="xml"
              outputFile="${report.findbugs.xml.dir}/out-argouml.xml"
              conserveSpace="true" timeout="18000000"
              jvmargs="-Xms64M -Xmx256M -verbosegc">
      <class location="../argouml-app/build/argouml.jar" />
      <auxClasspath>
        <fileset dir="../argouml-core-model/build">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="../argouml-core-infra/build">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="../argouml-core-model-mdr/build">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="../argouml-app/build">
          <include name="*.jar"/>
        </fileset>
      </auxClasspath>
      <sourcePath path="../argouml-app/src"/>
      <classpath>
        <path refid="findbugs.path"/>
      </classpath>
    </findbugs>

    <style basedir="${report.findbugs.xml.dir}"
           includes="out-argouml.xml"
           destdir="${report.findbugs.dir}/argouml"
           style="${xsl.dir}/findbugs-frames.xsl">
      <param name="output.dir" expression="${report.findbugs.dir}/argouml"/>
      <param name="messages.xml" expression="${working.dir}/messages.xml"/>
    </style>

  </target>


  <!-- ################################################################### 
       # sending mails
  -->
  <target name="junit-report-mail">
    <description>Mail status from JUnit test run</description>

    <mail from="closettop_nightlybuild@tigris.org"
          tolist="dev@argouml-stats.tigris.org"
          mailhost="smtp.vokby.se"
          subject="JUnit tests completed."
          message="The JUnit tests using ${java.home} are completed."
      />
    <antcall target="junit-report-mail-cond"/>
  </target>

  <target name="junit-report-mail-cond" if="junit.failure">

    <mail from="closettop_nightlybuild@tigris.org"
          tolist="users@argouml-stats.tigris.org"
          mailhost="smtp.vokby.se"
          subject="JUnit tests failed."
          message="There was a JUnit test run using ${java.home} failing."
      />
  </target>

</project>
