<!--
 This build file contains the rules to build
 all the different statistics and snapshots built
 by the argouml-gen project.
 
 Description of the set-up are in http://argouml-gen.tigris.org/techdoc.html
 -->

<project name="argouml-gen" default="report:jdepend" basedir=".">
  <description>
        Build some targets in another project and save results to CVS.
    </description>
  <property name="cvs.root" value=":pserver:guest@cvs.tigris.org:/cvs"/>
  <property name="project.to.build" value="argouml"/>
  <property name="working.dir" location="${basedir}/tmp"/>
  <property name="argouml.dir" location="${working.dir}/argouml"/>
  <property name="argouml.src.dir" location="${argouml.dir}/src_new"/>
  <property name="argouml.documentation.dir" location="${argouml.dir}/documentation"/>
  
  <property name="xsl.dir" location="${basedir}/xsl"/>

  <property name="instrument-ant.xsl" location="${xsl.dir}/instrument-ant.xsl"/>

  <target name="init">
    <!-- Common initializations. -->
    <mkdir dir="${working.dir}"/>
  </target>

  <!-- ================================================================ -->
  <!-- Things that depend on the source of ArgoUML                      -->
  <!-- ================================================================ -->

  <target name="update" depends="init"
          description="update the project source from CVS">
    <echo>CVSROOT is ${cvs.root}</echo>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml/src"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml/src_new"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml/tests"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml/lib"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml/modules"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml/tools"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml-cpp/src"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml-de/src"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml-en-gb/src"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml-es/src"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml-fr/src"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml-it/src"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml-nb/src"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml-pt/src"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml-ru/src"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml-sv/src"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml-i18n-zh/src"/>
  </target>

  <target name="clean" description="remove all generated reports">
    <ant dir="${argouml.src.dir}" antfile="build-reports.xml" target="clean"/>
  </target>
  
  <target name="init-reports">
    <copy file="build-reports.xml" todir="${argouml.src.dir}" overwrite="true"/>
    <copy file="reporting.properties" todir="${argouml.src.dir}" overwrite="true"/>
  </target>
  
  <target name="report:jcoverage" depends="init-reports" description="generate jcoverage reports">
    <ant dir="${argouml.src.dir}" antfile="build-reports.xml" target="report:jcoverage"/>
  </target>

  <target name="report:jdepend" depends="init-reports" description="generate jdepend reports">
    <ant dir="${argouml.src.dir}" antfile="build-reports.xml" target="report:jdepend"/>
  </target>

  <target name="report:checkstyle" depends="init-reports" description="generate checkstyle reports">
    <ant dir="${argouml.src.dir}" antfile="build-reports.xml" target="report:checkstyle"/>
  </target>

  <target name="report:junit" depends="init-reports" description="generate junit reports">
    <ant dir="${argouml.src.dir}" antfile="build-reports.xml" target="report:junit"/>
  </target>

  <target name="report:javadocs" depends="init-reports" description="generate javadocs reports">
    <ant dir="${argouml.src.dir}" antfile="build-reports.xml" target="report:javadocs"/>
  </target>

  <target name="report:findbugs" depends="init-reports" description="generate FindBug reports">
    <ant dir="${argouml.src.dir}" antfile="build-reports.xml" target="report:findbugs"/>
  </target>

  <target name="report:i18ncomparison" description="generate comparison between internationalizations.">
    <property name="output.dir"
              location="${argouml.dir}/build/reports/i18ncomparison"/>
    <mkdir dir="${output.dir}"/>
    <exec executable="tools/bin/compare-i18n.sh"
          output="${output.dir}/index.html"/>
  </target>



  <!-- ================================================================ -->
  <!-- The documentation of ArgoUML                                     -->
  <!-- ================================================================ -->

  <target name="update-documentation" depends="init"
          description="update the documentation from CVS">
    <echo>CVSROOT is ${cvs.root}</echo>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml/documentation"/>
    <cvs cvsRoot="${cvs.root}" quiet="Yes" dest="${working.dir}" package="argouml/tools"/>
  </target>

  <target name="report:documentation" description="generate the documentation">
    <ant dir="${argouml.documentation.dir}" target="defaulthtml" inheritAll="false">
      <property name="argo.root.dir" value="${argouml.dir}"/>
    </ant>
    <!-- Special patching to reduce the size of the diff -->
    <exec dir="${argouml.dir}/build/documentation/defaulthtml"
          executable="sh"
          failonerror="true">
      <arg value="-c"/>
      <arg value='for i in */*.html; do mv $i $i.orig &amp;&amp; sed &apos;s/\(name="[^"]*"\|href="[^"#]*#[^"#]*"\)/\n    &amp;\n/g&apos; $i.orig > $i &amp;&amp; rm $i.orig; done'/>
    </exec>
  </target>

</project>
